=7000-72-179-446
7000-72-179-446
MTDsleep <- march.mtd.construct(sleep,order=2)
print(MTDsleep)
MTDsleep <- march.mtd.construct(sleep,order=2,maxOrder=3)
print(MTDsleep)
Indsleep <- march.indep.construct(sleep,maxOrder=1)
print(Indsleep)
library(march)
DCMMsleep <- march.dcmm.construct(sleep, orderHC=1, orderVC=1, M=2, gen = 1,
popSize = 1, iterBw = 25, stopBw = 0.1)
print(DCMMsleep)
library(march)
help(march)
library(march)
help(march)
load(sleep)
data(sleep)
View(sleep)
ls()
sleep@yN
sleep
ls(sleep)
summary(sleep)
library(march)
help(march.construct.dcmm)
help(march.dcmm.construct)
march.dcmm.construct(pewee, orderHC=1, orderVC=0, M=3, gen = 1, popSize = 1,iterBw = 5, stopBw = 0.1)
march.dcmm.construct(pewee, orderHC=1, orderVC=1, M=3, gen = 1, popSize = 1,iterBw = 5, stopBw = 0.1)
march.dcmm.construct(pewee, orderHC=2, orderVC=1, M=3, gen = 1, popSize = 1,iterBw = 5, stopBw = 0.1)
data(sleep_df)
View(sleep_df)
dodo <- march.dataset.loadFromDataFrame(sleep_df[1:25,], MARGIN = 2, weights = NA, missingDataRep = NA)
W=runif(25)
W <- W/sum(W)
sum(W)
W
W <- W*25
W
sum(W)
dodo.W <- march.dataset.loadFromDataFrame(sleep_df[1:25,], MARGIN = 2, weights = W, missingDataRep = NA)
march.indep.construct(dd)
march.indep.construct(dodo)
march.indep.construct(dodo.W)
march.mc.construct(dodo,order=1)
march.mc.construct(dodo.W,order=1)
march.mtd.construct(dodo,order=1)
help(march.mtd.construct)
help(march.mtd.W.construct)
march.mtd.construct(dodo.W,order=1)
dodo100 <- march.dataset.loadFromDataFrame(sleep_df[1:100,], MARGIN = 2, weights = NA, missingDataRep = NA)
dcmm.mc.construct(dodo100,order=1)
march.mc.construct(dodo100,order=1)
march.mtd.construct(dodo100,order=1)
model <- march.mtd.construct(pewee,4)
print(model)
model <- march.mtd.construct(pewee,3,mtdg=TRUE)
print(model)
model <- march.mtd.construct(sleep,4)
print(model)
dodo1000 <- march.dataset.loadFromDataFrame(sleep_df[1:1000,], MARGIN = 2, weights = NA, missingDataRep = NA)
model <- march.mtd.construct(dodo1000,4)
print(model)
W1000 <- runif(1000)
W1000 <- W1000/sum(W1000)*1000
sum(W1000)
dodo1000.W <- march.dataset.loadFromDataFrame(sleep_df[1:1000,], MARGIN = 2, weights = W1000, missingDataRep = NA)
model <- march.mtd.construct(dodo1000.W,4)
print(model)
march.indep.construct(dodo1000)
march.indep.construct(dodo1000.W)
xx <- 1:5
yy <- 2:6
xx*yy
xx*yy-5
model <- march.mtd.construct(dodo1000.W,4)
print(model)
library(march)
library(march)
model <- march.mtd.construct(dodo1000.W,4)
print(model)
library(march)
model <- march.mtd.construct(dodo1000.W,4)
print(model)
model <- march.mtd.construct(dodo1000,4,mtdg=TRUE), print(model)
model <- march.mtd.construct(dodo1000,4,mtdg=TRUE)print(model)
model <- march.mtd.construct(dodo1000,4,mtdg=TRUE)
print(model)
model <- march.mtd.construct(dodo1000.W,4,mtdg=TRUE)
print(model)
model <- march.dcmm.construct(dodo1000,orderHC=1,orderVC=1,M=3,gen=1,popSize=1)
print(model)
model <- march.dcmm.construct(dodo1000.W,orderHC=1,orderVC=1,M=3,gen=1,popSize=1)
print(model)
library(march)
model <- march.dcmm.construct(dodo1000.W,orderHC=1,orderVC=1,M=3,gen=1,popSize=1)
print(model)
model <- march.dcmm.construct(dodo1000,orderHC=1,orderVC=0,M=3,popSize=1)
print(model)
model <- march.dcmm.construct(dodo1000.W,orderHC=1,orderVC=0,M=3,popSize=1)
print(model)
model <- march.dcmm.construct(dodo1000.W,orderHC=2,orderVC=1,M=3,popSize=10,gen=3,iterBw=2)
print(model)
help(march)
library(march)
library(march)
help(march)
weighting <- rep(1.5,1000)
weighting[501:1000] <- rep(0.5,500)
sleep.w <- march.dataset.loadFromDataFrame(sleep_df, MARGIN = 2, weights = weighting, missingDataRep = NA)
library(march)
weighting <- rep(1.5,1000)
weighting[501:1000] <- rep(0.5,500)
sleep.w <- march.dataset.loadFromDataFrame(sleep_df, MARGIN = 2, weights = weighting, missingDataRep = NA)
pewee <- sleep.w
model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
data(sleep_df)
summary(sleep_df)
model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=2,M=4,popSize=2,gen=2)
model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
bestSeq <- march.dcmm.viterbi(model,pewee)
print(bestSeq)
model <- march.dcmm.construct(y=sleep,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
model <- march.dcmm.construct(y=sleep,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
t
j0
d
j
rowC
model <- march.dcmm.construct(y=sleep,orderHC=2,orderVC=3,M=3,popSize=2,gen=2)
model <- march.dcmm.construct(y=sleep,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
model <- march.dcmm.construct(y=sleep,orderHC=2,orderVC=3,M=3,popSize=2,gen=2)
model <- march.dcmm.construct(y=sleep,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
print(s)
print(d@Pi)
print(t-1)
print(alpga[t-1,i])
print(alpha[t-1,i])
model <- march.dcmm.construct(y=sleep,orderHC=2,orderVC=2,M=4,popSize=2,gen=2)
bestSeq <- march.dcmm.viterbi(model,pewee)
bestSeq <- march.dcmm.viterbi(model,pewee)
bestSeq[1,]
print(bestSeq)
bestSeq <- march.dcmm.viterbi(model,sleep)
bestSeq <- march.dcmm.viterbi(model,y=sleep)
bestSeq <- march.dcmm.viterbi(model,y=sleep)
model <- march.dcmm.construct(y=sleep,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
model <- march.dcmm.construct(y=sleep,orderHC=2,orderVC=2,M=2,popSize=1,gen=1)
bestSeq <- march.dcmm.viterbi(model,pewee)
bestSeq <- march.dcmm.viterbi(model,sleep)
bestSeq <- march.dcmm.viterbi(model,sleep)
bestSeq <- march.dcmm.viterbi(model,sleep)
bestSeq <- march.dcmm.viterbi(model,sleep)
model <- march.dcmm.construct(y=sleep,orderHC=2,orderVC=1,M=2,popSize=1,gen=1)
bestSeq <- march.dcmm.viterbi(model,sleep)
print(bestSeq)
data(sleep_df)
y <- rep(0,1000)
for (i in 1:1000){y[i] <- length(which(is.na(sleep_df[i,])==FALSE))}
View(sleep_df)
sleep2 <- sleep_df[y==7]
sleep2 <- sleep_df[y==7,]
SLEEP <- march.dataset.loadFromDataFrame(sleep2, MARGIN = 2, weights = NA,
missingDataRep = NA)
model <- march.dcmm.construct(SLEEP,orderHC=2,orderVC=3,M=2,popSize=1,gen=1)
bestSeq <- march.dcmm.viterbi(model,SLEEP)
print(bestSeq)
print(model)
model <- march.dcmm.construct(sleep,orderHC=2,orderVC=3,M=2,popSize=1,gen=1)
y@T
y
model <- march.dcmm.construct(sleep,orderHC=2,orderVC=4,M=2,popSize=1,gen=1)
y@T
y@T
summary(sleep_df)
library(march)
model <- march.dcmm.construct(sleep,orderHC=2,orderVC=4,M=2,popSize=1,gen=1)
library(march)
model <- march.dcmm.construct(sleep,orderHC=2,orderVC=4,M=2,popSize=1,gen=1)
model <- march.dcmm.construct(sleep,orderHC=2,orderVC=3,M=2,popSize=1,gen=1)
model <- march.dcmm.construct(sleep,orderHC=2,orderVC=2,M=2,popSize=1,gen=1)
library(march)
model <- march.dcmm.construct(sleep,orderHC=2,orderVC=3,M=2,popSize=1,gen=1)
library(march)
model <- march.dcmm.construct(sleep,orderHC=2,orderVC=3,M=2,popSize=1,gen=1)
model <- march.dcmm.construct(sleep,orderHC=2,orderVC=4,M=2,popSize=1,gen=1)
library(march)
model <- march.dcmm.construct(sleep,orderHC=2,orderVC=4,M=2,popSize=1,gen=1)
model <- march.dcmm.construct(sleep,orderHC=2,orderVC=3,maxOrder=4,M=2,popSize=1,gen=1)
library(march)
model <- march.dcmm.construct(sleep,orderHC=2,orderVC=3,maxOrder=4,M=2,popSize=1,gen=1)
model <- march.dcmm.construct(sleep,orderHC=2,orderVC=3,M=2,popSize=1,gen=1)
model <- march.dcmm.construct(sleep,orderHC=2,orderVC=3,maxOrder=4,M=2,popSize=1,gen=1)
model <- march.dcmm.construct(sleep,orderHC=1,orderVC=3,maxOrder=4,M=2,popSize=1,gen=1)
model <- march.dcmm.construct(sleep,orderHC=1,orderVC=3,M=2,popSize=1,gen=1)
model <- march.dcmm.construct(sleep,orderHC=1,orderVC=4,M=2,popSize=1,gen=1)
model <- march.dcmm.construct(sleep,orderHC=1,orderVC=3,M=2,popSize=1,gen=1)
bestSeq <- march.dcmm.viterbi(model,sleep)
bestSeq <- march.dcmm.viterbi(model,SLEEP)
View(bestSeq)
model <- march.dcmm.construct(SLEEP,orderHC=1,orderVC=4,M=2,popSize=1,gen=1)
model <- march.dcmm.construct(SLEEP,orderHC=1,orderVC=4,M=2,popSize=2,gen=1)
library(march)
model <- march.dcmm.construct(SLEEP,orderHC=1,orderVC=4,M=2,popSize=2,gen=1)
model <- march.dcmm.construct(sleep,orderHC=1,orderVC=4,M=2,popSize=2,gen=1)
model <- march.dcmm.construct(sleep,orderHC=2,orderVC=3,M=2,popSize=2,gen=1)
data(pewee_df)
p2 <- pewee_df
View(p2)
p2$V2 <- p2
View(p2)
p2$V2 <- p2$V1
View(p2)
PEWEE < march.dataset.loadFromDataFrame(p2, MARGIN = 2, weights = NA,
missingDataRep = NA)
PEWEE <- march.dataset.loadFromDataFrame(p2, MARGIN = 2, weights = NA,
missingDataRep = NA)
model <- march.dcmm.construct(PEWEE,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
PEWEE@T
PEWEE <- march.dataset.loadFromDataFrame(p2, MARGIN = 1, weights = NA,
missingDataRep = NA)
PEWEE@T
model <- march.dcmm.construct(PEWEE,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
bestSeq <- march.dcmm.viterbi(model,pewee)
print(bestSeq)
models <- march.dcmm.construct(sleep,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
PEWEE@T
PEWEE@T[2] <- 5
model <- march.dcmm.construct(PEWEE,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
PEWEE@Y
PEWEE@y
PEWEE@y[2,6] <- NA
PEWEE@y[6,2] <- NA
View(PEWEE@y)
p2
p3 <- pewee_df
p3
p3[6,1] <- NA
p2$V2 <- p3
p2
View(p2)
p2$V2 <- p3$V1
View(p2)
PEWEE <- march.dataset.loadFromDataFrame(p2, MARGIN = 1, weights = NA,
missingDataRep = NA)
PEWEE@T
model <- march.dcmm.construct(PEWEE,orderHC=2,orderVC=3,M=4,popSize=2,gen=1)
summary(sleep)
summary(sleep_df)
model2 <- march.dcmm.construct(sleep,orderHC=2,orderVC=3,M=4,popSize=2,gen=1)
p3[5,1] <- NA
p2$V2 <- p3$V1
PEWEE <- march.dataset.loadFromDataFrame(p2, MARGIN = 1, weights = NA,
missingDataRep = NA)
model <- march.dcmm.construct(PEWEE,orderHC=2,orderVC=3,M=4,popSize=2,gen=1)
library(march)
model <- march.dcmm.construct(PEWEE,orderHC=2,orderVC=3,M=4,popSize=2,gen=1)
print(model)
model2 <- march.dcmm.construct(sleep,orderHC=2,orderVC=3,M=4,popSize=2,gen=1)
model2 <- march.dcmm.construct(sleep,orderHC=2,orderVC=3,M=2,popSize=1,gen=1)
model2 <- march.dcmm.construct(sleep,orderHC=3,orderVC=3,M=2,popSize=1,gen=1)
model2 <- march.dcmm.construct(sleep,orderHC=2,orderVC=4,M=2,popSize=1,gen=1)
model2 <- march.dcmm.construct(sleep,orderHC=1,orderVC=3,M=2,popSize=1,gen=1)
print(model2)
summary(sleep_df)
mc3 <- march.mc.construct(sleep,order=3)
print(mc3)
mc4 <- march.mc.construct(sleep,order=4)
print(mc4)
library(march)
library(march)
library(march)
library(march)
library(march)
library(march)
mc2 <- march.mc
mc2 <- march.mc.construct(pewee,order=2)
library(march)
mc2 <- march.mc.construct(pewee,order=2)
library(march)
mc2 <- march.mc.construct(pewee,order=2)
library(march)
mc2 <- march.mc.construct(pewee,order=2)
library(march)
mc2 <- march.mc.construct(pewee,order=2)
library(march)
mc2 <- march.mc.construct(pewee,order=2)
march.mc.construct(pewee,order=2)
march.mc.construct(pewee,order=1)
march.mc.construct(pewee,order=2)
library(march)
march.mc.construct(pewee,order=2)
?march.thompson
library(march)
?march.thompson
?march.thompson.Dcmm
march.name-class
?march.Dcmm-method
?`march.Dcmm-class`
?`march.Dcmm-method`
??`march.Dcmm-method`
?march.name
?march.Dcmm-method.Rd
?march.Dcmm-method
?march.Dcmm
??march.Dcmm
library("march", lib.loc="~/R/win-library/3.2")
7
search()
?importfrom
?@ImportFrom
?ImportFrom
??ImportFrom
library(march)
# Estimation of a DCMM
model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
# Extraction of the best sequence of hidden states using the Viterbi algorithm.
bestSeq <- march.dcmm.viterbi(model,pewee)
print(bestSeq)
help(time)
# Estimation of a DCMM
model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
# Extraction of the best sequence of hidden states using the Viterbi algorithm.
bestSeq <- march.dcmm.viterbi(model,pewee)
print(bestSeq)
# Estimation of a DCMM
model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
# Extraction of the best sequence of hidden states using the Viterbi algorithm.
bestSeq <- march.dcmm.viterbi(model,pewee)
print(bestSeq)
# Estimation of a DCMM
#model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=2,M=3,popSize=2,gen=2)
# Extraction of the best sequence of hidden states using the Viterbi algorithm.
bestSeq <- march.dcmm.viterbi(model,pewee)
print(bestSeq)
# Estimation of a DCMM
#model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
model <- march.dcmm.construct(y=pewee,orderHC=1,orderVC=2,M=3,popSize=2,gen=2)
# Extraction of the best sequence of hidden states using the Viterbi algorithm.
bestSeq <- march.dcmm.viterbi(model,pewee)
print(bestSeq)
# Estimation of a DCMM
#model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
model <- march.dcmm.construct(y=pewee,orderHC=1,orderVC=2,M=3,popSize=2,gen=2)
# Extraction of the best sequence of hidden states using the Viterbi algorithm.
bestSeq <- march.dcmm.viterbi(model,pewee)
print(bestSeq)
# Estimation of a DCMM
#model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=3,M=4,popSize=2,gen=1)
# Extraction of the best sequence of hidden states using the Viterbi algorithm.
bestSeq <- march.dcmm.viterbi(model,pewee)
print(bestSeq)
# Estimation of a DCMM
#model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=1,M=3,popSize=2,gen=2)
# Extraction of the best sequence of hidden states using the Viterbi algorithm.
bestSeq <- march.dcmm.viterbi(model,pewee)
print(bestSeq)
# Estimation of a DCMM
#model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=1,M=2,popSize=2,gen=2)
# Extraction of the best sequence of hidden states using the Viterbi algorithm.
bestSeq <- march.dcmm.viterbi(model,pewee)
print(bestSeq)
model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
bestSeq <- march.dcmm.viterbi(model,pewee)
print(bestSeq)
# Estimation of a DCMM
set.seed(1234)
#model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=1,M=2,popSize=2,gen=1)
# Extraction of the best sequence of hidden states using the Viterbi algorithm.
bestSeq <- march.dcmm.viterbi(model,pewee)
print(bestSeq)
# Estimation of a DCMM
set.seed(4321)
#model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=1,M=2,popSize=2,gen=1)
# Extraction of the best sequence of hidden states using the Viterbi algorithm.
bestSeq <- march.dcmm.viterbi(model,pewee)
print(bestSeq)
# Estimation of a DCMM
set.seed(111)
#model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=3,M=4,popSize=2,gen=2)
model <- march.dcmm.construct(y=pewee,orderHC=2,orderVC=1,M=2,popSize=2,gen=1)
# Extraction of the best sequence of hidden states using the Viterbi algorithm.
bestSeq <- march.dcmm.viterbi(model,pewee)
print(bestSeq)
# Build a 4th order MTD model from the pewee data set.
model <- march.mtd.construct(pewee,4)
print(model)
# Build a 3th order MTDg model from the pewee data set.
model <- march.mtd.construct(pewee,3,mtdg=TRUE)
print(model)
# Construct a DCMM using an order 2 hidden chain,
# a visible chain of order 3 and 3 hidden states.
# A first model is computed using both EA and Baum-Welch algorithms.
# Then the initial solution is improved through two rounds of Baum-Welch optimization.
models <- list()
models[[length(models)+1]] <- march.dcmm.construct(y=pewee,orderHC=2,
orderVC=3,M=3,popSize=2,gen=2)
models[[length(models)+1]] <- march.dcmm.construct(y=pewee,seedModel=models[[1]],
orderVC=3,iterBw=10,stopBw=0.001)
models[[length(models)+1]] <- march.dcmm.construct(y=pewee,seedModel=models[[2]],
orderVC=3,iterBw=10,stopBw=0.0001)
# Show performance indicators (ll, number of independent parameters,
# BIC and AIC) for all computed models.
r <- do.call(rbind,lapply(models,march.summary))
print(r)
# Construct a three hidden states, first-order HMM (hence OrderVC=0) for the sleep data.
# By setting gen=1 and popSize=1, the estimation procedure uses only the Baum-Welch algorithm.
HMM <- march.dcmm.construct(sleep,orderHC=1,orderVC=0,M=3,gen=1,popSize=1,iterBw=10,stopBw=0.0001)
print(HMM)
# Compute the best sequence of hidden states for each subject in the sleep data.
HS <- march.dcmm.viterbi(HMM,sleep)
# Display the hidden states for the first 10 subjects.
print(HS[1:10])
help(skip)
help(skip_on_cran)
march.dcmm.construct(y=pewee,orderHC=1,orderVC=1,M=2,popSize=2,gen=2)
march.dcmm.construct(sleep,orderHC=1,orderVC=0,M=3,gen=1,popSize=1,iterBw=10,stopBw=0.0001)
march.dcmm.construct(pewee,orderHC=1,orderVC=0,M=3,gen=1,popSize=1,iterBw=10,stopBw=0.0001)
march.dcmm.construct(pewee,orderHC=1,orderVC=0,M=3,gen=1,popSize=1,iterBw=5,stopBw=0.001)
# Construct a 2 hidden states DCMM for the pewee data
# with hidden and visible orders set to 1.
# The estimation procedure uses only the evolutionary algorithm.
march.dcmm.construct(y=pewee,orderHC=1,orderVC=1,M=2,popSize=2,gen=2)
# Construct a first-order, three hidden states HMM for the pewee data.
# The estimation procedure uses only the Bauw-Welch algorithm.
march.dcmm.construct(pewee,orderHC=1,orderVC=0,M=3,gen=1,popSize=1,iterBw=5,stopBw=0.001)
skip_on_cran(
# Construct a DCMM using an order 2 hidden chain,
# a visible chain of order 3 and 3 hidden states.
# A first model is computed using both EA and Baum-Welch algorithms.
# Then the initial solution is improved through two rounds of Baum-Welch optimization.
models <- list()
models[[length(models)+1]] <- march.dcmm.construct(y=pewee,orderHC=2,
orderVC=3,M=3,popSize=2,gen=2)
models[[length(models)+1]] <- march.dcmm.construct(y=pewee,seedModel=models[[1]],
orderVC=3,iterBw=10,stopBw=0.001)
models[[length(models)+1]] <- march.dcmm.construct(y=pewee,seedModel=models[[2]],
orderVC=3,iterBw=10,stopBw=0.0001)
# Show performance indicators (ll, number of independent parameters,
# BIC and AIC) for all computed models.
r <- do.call(rbind,lapply(models,march.summary))
print(r)
# Construct a three hidden states, first-order HMM (hence OrderVC=0) for the sleep data.
# By setting gen=1 and popSize=1, the estimation procedure uses only the Baum-Welch algorithm.
HMM <- march.dcmm.construct(sleep,orderHC=1,orderVC=0,M=3,gen=1,popSize=1,iterBw=10,stopBw=0.0001)
# Construct a DCMM using an order 2 hidden chain,
# a visible chain of order 3 and 3 hidden states.
# A first model is computed using both EA and Baum-Welch algorithms.
# Then the initial solution is improved through two rounds of Baum-Welch optimization.
models <- list()
models[[length(models)+1]] <- march.dcmm.construct(y=pewee,orderHC=2,
orderVC=3,M=3,popSize=2,gen=2)
models[[length(models)+1]] <- march.dcmm.construct(y=pewee,seedModel=models[[1]],
orderVC=3,iterBw=10,stopBw=0.001)
library(TraMineR)
help("TraMineR")
# Construct a 2 hidden states DCMM for the pewee data
# with hidden and visible orders set to 1.
# The estimation procedure uses only the evolutionary algorithm.
march.dcmm.construct(y=pewee,orderHC=1,orderVC=1,M=2,popSize=2,gen=2)
# Construct a first-order, three hidden states HMM for the pewee data.
# The estimation procedure uses only the Bauw-Welch algorithm.
march.dcmm.construct(pewee,orderHC=1,orderVC=0,M=3,gen=1,popSize=1,iterBw=5,stopBw=0.001)
## Not run:
# Construct a DCMM using an order 2 hidden chain,
# a visible chain of order 3 and 3 hidden states.
# A first model is computed using both EA and Baum-Welch algorithms.
# Then the initial solution is improved through two rounds of Baum-Welch optimization.
models <- list()
models[[length(models)+1]] <- march.dcmm.construct(y=pewee,orderHC=2,
orderVC=3,M=3,popSize=2,gen=2)
# Construct a 2 hidden states DCMM for the pewee data
# with hidden and visible orders set to 1.
# The estimation procedure uses only the evolutionary algorithm.
march.dcmm.construct(y=pewee,orderHC=1,orderVC=1,M=2,popSize=2,gen=2)
# Construct a first-order, three hidden states HMM for the pewee data.
# The estimation procedure uses only the Bauw-Welch algorithm.
march.dcmm.construct(pewee,orderHC=1,orderVC=0,M=3,gen=1,popSize=1,iterBw=3,stopBw=0.001)
# Construct a 2 hidden states DCMM for the pewee data
# with hidden and visible orders set to 1.
# The estimation procedure uses only the evolutionary algorithm.
march.dcmm.construct(y=pewee,orderHC=1,orderVC=1,M=2,popSize=2,gen=2)
# Construct a first-order, three hidden states HMM for the pewee data.
# The estimation procedure uses only the Bauw-Welch algorithm.
march.dcmm.construct(pewee,orderHC=1,orderVC=0,M=3,gen=1,popSize=1,iterBw=3,stopBw=0.001)
help(march)
library(march)
library(march)
help(march)
library(march)
library(roxygen2)
install.packages("roxygen")
install.packages("roxygen2")
library(march)
help("march")
library(march)
help("march")
library(march)
help("march")
library(march)
library(march)
help("march")
help(march)
library(march)
help(march)
dir()
