{
    "contents" : "# TODO: Add comment\n# \n# Author: Ogier Maitre\n###############################################################################\n\n\n#' Extract a sequence from a dataset\n#' @export\nmarch.dataset.h.extractSequence <- function(y,i){\n  new(\"march.Sequence\",y=y@y[[i]],N=as.integer(y@T[i]),weight=y@weights[i])\n}\n\n#' Load a dataset from a file.\n#' \n#' The function loads a dataset from a text file, where each row (resp. column) represents \n#' a data serie when \\emph{MARGIN} is 2 (resp. 1), using the character \\emph{sep} as attribute separator. \n#' Each data sequence should be stored in a given column, (resp. row).\n#' \n#' @param filename a path to the text file, containing the dataset.\n#' @param MARGIN the dimension of the extracted data.frame that contains the sequences (resp 1 for the column, 2 for the rows).\n#' @param sep a caracter used as element separator on a line.\n#' @param weights if specified, contains the weight of each sequence.\n#' \n#' @return a \\code{\\link{march.Dataset}} object containing the data from the file found at \\emph{filename}, using separator\n#' \\emph{sep}.\n#'\n#' @export\nmarch.dataset.loadFromFile <- function( filename, MARGIN=2,sep=\",\",weights=NA){\n  r<- t(read.table(filename,sep=sep))\n  \n  march.dataset.loadFromDataFrame(r,MARGIN=MARGIN,weights)\n}\n\n#' Construct a dataset from a data.frame or a matrix.\n#' \n#' The function creates a \\code{\\link{march.Dataset}} from a \\emph{dataframe} or a \\emph{matrix}, where each row (resp. column) represents \n#' a data serie when \\emph{MARGIN} is 2 (resp. 1).\n#' \n#' @param dataframe a \\code{\\link{data.frame}} containing the dataset.\n#' @param MARGIN the dimension of the matrix/data.frame that contains the sequences (resp 1 for the column, 2 for the rows).\n#' @param weights if specified, contains the weight of each sequence.\n#' @param missingDataRep if specified, the symbol representing a missing data.\n#' @return a \\code{\\link{march.Dataset}} object containing the data contructed from the matrix or data.frame.\n#'\n#' @export\nmarch.dataset.loadFromDataFrame <- function( dataframe, MARGIN=2,weights=NA,missingDataRep=NA ){\n  \n  if( is.na(missingDataRep)==FALSE ){ dataframe[dataframe==missingDataRep]<-NA }\n  \n  if( MARGIN==1 ){\n    r<- t(dataframe)\n  }\n  else{\n    r<- dataframe\n  }\n  N <- dim(r)[1]\n  T <- array(0,c(N))\n  \n  # Get the number of elements per sequence\n  # read.table should return a matrix where non existing values\n  # are represented by NA\n  for( i in 1:N){\n    isNa <- is.na(r[i,])\n    if( sum(isNa)>0 ){ T[i] <- min(which(isNa))-1 }\n    else{ T[i] <- dim(r)[2] }\n  }\n  \n  # creating a factor representation and its dictionary\n  yfactorV <- factor(as.vector(t(r)))\n  dictionary <- levels(yfactorV)\n  \n  # determining the number of possible output\n  K <- as.integer(max(as.numeric(yfactorV),na.rm=TRUE))\n  \n  # create a list of values for each sequence\n  y <- list(N)\n  y[[1]] <- as.numeric(yfactorV[1:T[1]])\n  for( i in march.h.seq(2,N) ){\n    y[[i]] <- as.numeric(yfactorV[(dim(r)[2]*(i-1))+(1:(T[i]))])\n  }\n  \n  \n  # weights\n  if( length(weights)==1 && is.na(weights) ){\n    weights <- array(1,c(N))\n  }\n  \n  new(\"march.Dataset\",yRaw=as.matrix(r),T=T,y=y,dictionary=dictionary,N=N,K=K,weights=weights)\n}\n\nmarch.dataset.h.filtrateShortSeq <- function(y,limit){\n  seqs <- list()\n  nT <- list()\n  nW <- list()\n  \n  count <- 0\n  \n  for( i in 1:y@N ){\n    if( y@T[i]>=limit ){\n      count <- count+1\n      seqs[[count]] <- y@y[[i]]\n      nT[[count]] <- y@T[i]\n      nW[[count]] <- y@weights[i]\n      \n    }\n  }\n  \n  new(\"march.Dataset\",y=seqs,K=y@K,N=as.integer(count),T=unlist(nT),weights=unlist(nW),dictionary=y@dictionary)\n}\n\nmarch.dataset.h.cut <- function(y,start){\n  seqs <- list()\n  nT <- list()\n  nW <- list()\n  \n  for( i in 1:y@N ){\n    seqs[[i]] <- y@y[[i]][(1+start):y@T[i]]\n    nT[[i]] <- y@T[i]-start\n    nW[[i]] <- y@weights[i]\n  }\n  \n  new(\"march.Dataset\",y=seqs,K=y@K,N=y@N,T=unlist(nT),weights=unlist(nW),dictionary=y@dictionary)\n}",
    "created" : 1400312091703.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1042331342",
    "id" : "7141CC64",
    "lastKnownWriteTime" : 1400311175,
    "path" : "~/Desktop/Bur/mc-RC3/mc/R/march.dataset.R",
    "project_path" : "R/march.dataset.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}