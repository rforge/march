{
    "contents" : "#' Dataset for march package.\n#' \n#' This class contains several discrete-valued time series, in a dataset. It contains for each sequence, \n#' its length and weights.\n#' \n#' The internal representation uses factor-like representation. The integer values correspond to the words stored\n#' into the dictionary vector. Therefor, they are in the interval [1,K].\n#' \n#'  @section Slots:\n#'  \\describe{\n#'    \\item{\\code{yRaw}:}{A matrix of \\code{\\link{character}} string, describing the content of \n#'    the original dataset or file, if any.}\n#'    \\item{\\code{y}:}{A list of vector of \\code{\\link{integer}} representing the  each discrete-valued time series\n#'    of the dataset, as can be used by the models.}\n#'    \\item{\\code{T}:}{A vector of \\code{\\link{integer}} values representing the length of each sequence.}\n#'    \\item{\\code{weights}:}{A vector of \\code{\\link{numeric}} values representing the weight of each sequence.}\n#'    \\item{\\code{K}:}{A \\code{\\link{integer}} value representing the number of possible ouput and the number\n#'    of words stored into the dictionary.}\n#'    \\item{\\code{N}:}{A \\code{\\link{integer}} value representing the number of sequence.}\n#'    \\item{\\code{Dictionary}:}{A vector of \\code{\\link{character}} string representing the translation between \n#'    the yRaw and y data. Each character string is stored according to the integer which represents it into y.}\n#'  }\n#'  @seealso \\code{\\link{march.dataset.loadFromFile}}, \\code{\\link{march.dataset.loadFromDataFrame}}\n#'  @author Ogier Maitre\nsetClass(\"march.Dataset\",\n         representation(  yRaw=\"matrix\",y=\"list\",\"T\"=\"vector\",weights=\"vector\",\n                          K=\"integer\",N=\"integer\",dictionary=\"vector\"))\n\n# This class represents a discrete-valued time serie.\n# \n# This class describes a discrete-valued time serie, as extracted from \\code{\\link{march.Dataset}}.\n# It is not meant to be handled by user, but to be used internaly.\n# \n# @section Slots:\n#  \\describe{\n#    \\item{\\code{vector}:}{the discrete-valued time serie.}\n#    \\item{\\code{weight}:}{the weight of the current discrete-valued time serie.}\n#    \\item{\\code{N}:}{The number of samples contained in the serie.}\n#  }\nsetClass(\"march.Sequence\",representation(y=\"vector\",weight=\"numeric\",N=\"integer\"))\n\n#' A basic and virtual march model.\n#' \n#' This class describe the basic and virtual model, that every model of the package will extend.\n#' This is a virtual class, which is not meant to be handled by user directly.\n#' \n#' @seealso The classes that inherit from march.Model are : \\code{\\link{march.Indep}}, \\code{\\link{march.Mc}}, \\code{\\link{march.Mtd}}, \\code{\\link{march.Dcmm}}.\n#' \n#'  @section Slots:\n#'    \\describe{\n#'      \\item{\\code{ll}:}{A \\code{\\link{numeric}} representing the log-likeihood for this model \\emph{w.r.t} its \n#'      construction dataset.}\n#'      \\item{\\code{y}:}{The \\code{\\link{march.DataSet}} used to construct the model.}\n#'      \\item{\\code{dsL}:}{A \\code{\\link{numeric}} representing the number of sample used to construct the model.}\n#'      \\item{\\code{nbZeros}:}{A \\code{\\link{numeric}} representing the number of zeros created during model construction.}\n#'      }\nsetClass(\"march.Model\",representation(ll=\"numeric\",y=\"march.Dataset\",dsL=\"numeric\",nbZeros=\"numeric\",\"VIRTUAL\"))\n\n\n#' An independence model.\n#' \n#' This class describes an independence model, represented by the probability distribution \\emph{indP} of each event\n#' and the number of data used to compute each member of the probability distribution. march.Indep inherits\n#' from \\code{\\link{march.Model}} and therefore inherits its slots.\n#' \n#' @section Slots:\n#'  \\describe{\n#'    \\item{\\code{indP}:}{A vector of \\code{\\link{numeric}} representing the model probability distribution.}\n#'    \\item{\\code{indC}:}{A vector of \\code{\\link{integer}} representing the number of data used to compute each\n#'    member of the probability distribution.}\n#'    }\n#' @seealso \\code{\\link{march.indep.construct}}, \\code{\\link{march.Model}}.\nsetClass(\"march.Indep\",contains=\"march.Model\",representation(indP=\"vector\",indC=\"vector\"))\n\n#' A markov chain of order >= 1.\n#' \n#' This class describes a markov chain of order \\emph{order}, represented by its RC (transition matrix in reduced form)\n#' and its RT (number of sample used to compute each transition). march.Mc extends \\code{\\link{march.Model}} class and therefor\n#' inherits its slots.\n#'\n#' @section Slots:\n#'  \\describe{\n#'    \\item{\\code{RC}:}{A matrix of \\code{\\link{numeric }} representing the reduced form of the \n#'    transition matrix of the current Markov Chain.}\n#'    \\item{\\code{order}:}{An \\code{\\link{integer}} representing the order of the current Markov Chain.}\n#'    \\item{\\code{RT}:}{A matrix of \\code{\\link{integer}} representing the number of sample used to compute each \n#'    transition row of the current RC matrix.}\n#'  }\n#'  \n#' @seealso \\code{\\link{march.mc.construct}}, \\code{\\link{march.Model}}.\nsetClass(\"march.Mc\",contains=\"march.Model\",representation(RC=\"array\",order=\"integer\",RT=\"array\"))\n\n\n#' A Mixture Transition Distribution (MTD) model.\n#' \n#' This class describes a Mixture Transition Distribution (MTD) model, represented by its transition matrix Q,\n#' the phi vector (the lag parameters) and its order. march.Mtd extends \\code{\\link{march.Model}} class and therefor\n#' inherits its slots.\n#' march.Mtd extends \\code{\\link{march.Model}} class and therefor inherits its slots.\n#' \n#' The model used here is described into :\n#' \\itemize{\n#'  \\item RAFTERY, A. E. A new model for discrete-valued time series: Autocorrelations and extensions. \n#'  Rassegna di Metodi Statistici ed Applicazioni 3-4 (1985), pp. 149-162.\n#'  \\item BERCHTOLD, A. Estimation in the mixture transition distribution model\n#'  Journal of Time Series Analysis, 22 (4) (2001), pp. 379-397\n#' }\n\n#' \n#'  @section Slots:\n#'  \\describe{\n#'    \\item{\\code{Q}:}{A matrix of \\code{\\link{numeric}} representing the transition matrix associated with the \n#'    current MTD model.}\n#'    \\item{\\code{phi}:}{A vector of \\code{\\link{numeric}} representing the vector of lag parameters.}\n#'    \\item{\\code{order}:}{An \\code{\\link{integer}} representing the order of the model.}\n#'  }\n#'    \n#' @seealso \\code{\\link{march.mtd.construct}}, \\code{\\link{march.Model}}.\nsetClass(\"march.Mtd\",contains=\"march.Model\",\n         representation(Q=\"array\",phi=\"vector\",order=\"integer\"))\n\n\n#' A Double Chain Markov Model (DCMM).\n#' \n#' This class describe a Double Chain Markov Model (DCMM), represented by Pi, the probability distributions of the first\n#' hidden states; by A, the transition matrix between hidden states; by RC, the transition matrix between sucessive output.\n#' march.Dcmm extends \\code{\\link{march.Model}} class and therefor inherits its slots.\n#' \n#' The model used here is described into :\n#' \\itemize{\n#'  \\item Berchtold, A.: The double chain Markov model. Commun. Stat., Theory Methods 28 (1999), pp. 2569â€“2589  \n#' }\n#' \n#' @section Slots:\n#'  \\describe{\n#'    \\item{\\code{Pi}:}{A 3D matrix of \\code{\\link{numeric}} representing the probability distribution \n#'    of the first hidden state.}\n#'    \\item{\\code{A}:}{A matrix of \\code{\\link{numeric}} representing the transition matrix between hiddend states.}\n#'    \\item{\\code{RB}:}{A 3D matrix of \\code{\\link{numeric}} representing the transition matrix between successive \n#'    output, in a reduced form.}\n#'    \\item{\\code{M}:}{A \\code{\\link{integer}} value representing the number of hidden state.}\n#'    \\item{\\code{orderVC}:}{An \\code{\\link{integer}} value representing the order of the visible markov chain.}\n#'    \\item{\\code{orderHV}:}{An \\code{\\link{integer}} value representing the order of the hidden markov chain.}\n#'  }\n#'    \n#' @seealso \\code{\\link{march.dcmm.construct}}, \\code{\\link{march.Model}}.\nsetClass( \"march.Dcmm\", \n          representation(Pi=\"array\",A=\"array\",RB=\"array\",M=\"integer\",orderVC=\"integer\",orderHC=\"integer\"),\n          contains=\"march.Model\");\n\n\n# Those are abstract classes used into abstract EA.\n# Real EA algorithms should all use implementations of\n# these classes.\nsetClass(\"march.ea.InitParameters\",representation(fct=\"function\"))\nsetClass(\"march.ea.EvalParameters\",representation(fct=\"function\"))\nsetClass(\"march.ea.CrossoverParameters\",representation(fct=\"function\"))\nsetClass(\"march.ea.MutationParameters\",representation(fct=\"function\"))\nsetClass(\"march.ea.OptimizingParameters\",representation(fct=\"function\"))\n\n\nsetClass(\"march.ea.Parameters\",representation(\n  crossoverProb=\"numeric\",\n  optimizing=\"logical\",\n  \n  initParameters=\"march.ea.InitParameters\",\n  evalParameters=\"march.ea.EvalParameters\",\n  mutationParameters=\"march.ea.MutationParameters\",\n  crossoverParameters=\"march.ea.CrossoverParameters\",\n  optimizingParameters=\"march.ea.OptimizingParameters\",\n  populationSize=\"integer\",\n  generation=\"integer\")\n)\n\n\n# those are implementation of the abstract classes defined in march.ea.R\n# init, eval and mutation parameters :\nsetClass(\"march.dcmm.ea.InitParameters\",contains=\"march.ea.InitParameters\",\n         representation( AConst=\"logical\",\n                         M=\"integer\",\n                         K=\"integer\",\n                         orderVC=\"integer\",\n                         orderHC=\"integer\",\n                         y=\"march.Dataset\"\n         )\n)\n\nsetClass(\"march.dcmm.ea.EvalParameters\",contains=\"march.ea.EvalParameters\",\n         representation(ds=\"march.Dataset\")\t\t\n)\n\nsetClass(\"march.dcmm.ea.MutationParameters\",contains=\"march.ea.MutationParameters\",\n         representation(pMut=\"numeric\")\n)\n\nsetClass(\"march.dcmm.ea.OptimizingParameters\",contains=\"march.ea.OptimizingParameters\",\n         representation(ds=\"march.Dataset\",iterBw=\"integer\",stopBw=\"numeric\")\n)\n\n",
    "created" : 1400311559069.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "837826284",
    "id" : "80735F27",
    "lastKnownWriteTime" : 1392889244,
    "path" : "~/Desktop/Bur/mc-RC3/mc/R/march.AllClasses.R",
    "project_path" : "R/march.AllClasses.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}